swagger: "2.0"
info:
  title: "Bank Argent Transactions API documentation"
  description: "Contains all available API endpoints for managing transactions"
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: "localhost:3001"
basePath: "/api/v1"
schemes:
  - "http"
  - "https"
paths:
  /user/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      summary: "Get all user accounts"
      description: "API for retrieving all user accounts"
      produces:
        - "application/json"
      responses:
        200:
          description: "Accounts retrieved successfully"
          schema:
            $ref: "#/definitions/AccountsResponse"
        400:
          $ref: '#/responses/BadRequest'
        500:
          $ref: '#/responses/InternalServerError'
  /user/accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: "Get all transactions for a specific account on the current month"
      description: "API for retrieving all transactions for a specific account on the current month"
      parameters:
        - in: "path"
          name: "accountId"
          description: "ID of the account"
          required: true
          type: "string"
      produces:
        - "application/json"
      responses:
        200:
          description: "Transactions retrieved successfully"
          schema:
            $ref: "#/definitions/TransactionsResponse"
        400:
          $ref: '#/responses/BadRequest'
        500:
          $ref: '#/responses/InternalServerError'
  /user/accounts/{accountId}/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: "Get transaction details"
      description: "API for retrieving details of a specific transaction"
      parameters:
        - in: "path"
          name: "accountId"
          description: "ID of the account"
          required: true
          type: "string"
        - in: "path"
          name: "transactionId"
          description: "ID of the transaction"
          required: true
          type: "string"
      produces:
        - "application/json"
      responses:
        200:
          description: "Transaction details retrieved successfully"
          schema:
            $ref: "#/definitions/TransactionDetailResponse"
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /user/accounts/{accountId}/transactions/{transactionId}/category:
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Category Module
      summary: "Add a category to a transaction"
      description: "Add a category to a specific transaction"
      parameters:
        - in: "path"
          name: "accountId"
          description: "ID of the account"
          required: true
          type: "string"
        - in: "path"
          name: "transactionId"
          description: "ID of the transaction"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Category payload"
          required: true
          schema:
            $ref: "#/definitions/CategoryUpdate"
      produces:
        - "application/json"
      responses:
        200:
          description: "Category added successfully"
          schema:
            $ref: "#/definitions/TransactionDetailResponse"
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Category Module
      summary: "Update a category of a transaction"
      description: "Update the category of a specific transaction"
      parameters:
        - in: "path"
          name: "accountId"
          description: "ID of the account"
          required: true
          type: "string"
        - in: "path"
          name: "transactionId"
          description: "ID of the transaction"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Category payload"
          required: true
          schema:
            $ref: "#/definitions/CategoryUpdate"
      produces:
        - "application/json"
      responses:
        200:
          description: "Category updated successfully"
          schema:
            $ref: "#/definitions/TransactionDetailResponse"
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Category Module
      summary: "Delete a category of a transaction"
      description: "Delete the category of a specific transaction"
      parameters:
        - in: "path"
          name: "accountId"
          description: "ID of the account"
          required: true
          type: "string"
        - in: "path"
          name: "transactionId"
          description: "ID of the transaction"
          required: true
          type: "string"
      produces:
        - "application/json"
      responses:
        200:
          description: "Category deleted successfully"
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /user/accounts/{accountId}/transactions/{transactionId}/notes:
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Notes Module
      summary: "Add notes to a transaction"
      description: "Add notes to a specific transaction"
      parameters:
        - in: "path"
          name: "accountId"
          description: "ID of the account"
          required: true
          type: "string"
        - in: "path"
          name: "transactionId"
          description: "ID of the transaction"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Notes payload"
          required: true
          schema:
            $ref: "#/definitions/NotesUpdate"
      produces:
        - "application/json"
      responses:
        200:
          description: "Notes added successfully"
          schema:
            $ref: "#/definitions/TransactionDetailResponse"
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Notes Module
      summary: "Update notes of a transaction"
      description: "Update the notes of a specific transaction"
      parameters:
        - in: "path"
          name: "accountId"
          description: "ID of the account"
          required: true
          type: "string"
        - in: "path"
          name: "transactionId"
          description: "ID of the transaction"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Notes payload"
          required: true
          schema:
            $ref: "#/definitions/NotesUpdate"
      produces:
        - "application/json"
      responses:
        200:
          description: "Notes updated successfully"
          schema:
            $ref: "#/definitions/TransactionDetailResponse"
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Notes Module
      summary: "Delete notes of a transaction"
      description: "Delete the notes of a specific transaction"
      parameters:
        - in: "path"
          name: "accountId"
          description: "ID of the account"
          required: true
          type: "string"
        - in: "path"
          name: "transactionId"
          description: "ID of the transaction"
          required: true
          type: "string"
      produces:
        - "application/json"
      responses:
        200:
          description: "Notes deleted successfully"
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"
responses:
  BadRequest:
    description: Bad request
    schema:
      $ref: '#/definitions/ErrorResponse400'
  NotFound:
    description: Resource not found
    schema:
      $ref: '#/definitions/ErrorResponse404'
  InternalServerError:
    description: Internal server error
    schema:
      $ref: '#/definitions/ErrorResponse500'
definitions:
  Accounts:
    type: "object"
    properties:
      accountId:
        type: "string"
        description: "ID of the account"
      accountName:
        type: "string"
        description: "Name of the account"
      accountCurrency:
        type: "string"
        description: "The account's currency (e.g., Euro, Dollars...)"
      accountBalance:
        type: "number"
        format: "double"
        description: "The balance of the account"
      accountType:
        type: "string"
        description: "The availability of the account"
  ErrorResponse400:
    type: "object"
    properties:
      status:
        type: "integer"
        example: 400
      message:
        type: "string"
        example: "Invalid input provided"
      error:
        type: "string"
        example: "Bad Request"
  ErrorResponse404:
    type: "object"
    properties:
      status:
        type: "integer"
        example: 404
      message:
        type: "string"
        example: "Transaction not found"
      error:
        type: "string"
        example: "Not Found"
  ErrorResponse500:
    type: "object"
    properties:
      status:
        type: "integer"
        example: 500
      message:
        type: "string"
        example: "An unexpected error occurred on the server"
      error:
        type: "string"
        example: "Internal Server Error"
  Transaction:
    type: "object"
    properties:
      transactionId:
        type: "string"
        description: "ID of the transaction"
      transactionCurrency:
        type: "string"
        description: "Currency of the transaction"
      date:
        type: "string"
        format: "date"
        description: "Date of the transaction (current month only)"
      description:
        type: "string"
        description: "Transaction description"
      amount:
        type: "number"
        format: "double"
        description: "Transaction amount"
      balance:
        type: "number"
        format: "double"
        description: "Balance after the transaction"
  TransactionDetail:
    type: "object"
    allOf:
      - $ref: "#/definitions/Transaction"
      - properties:
          transactionType:
            type: "string"
            description: "Type of the transaction (e.g., Electronic, Check)"
          category:
            type: "string"
            description: "Category of the transaction"
          notes:
            type: "string"
            description: "Notes for the transaction"
  CategoryUpdate:
    type: "object"
    properties:
      category:
        type: "string"
        description: "Category of the transaction"
  NotesUpdate:
    type: "object"
    properties:
      notes:
        type: "string"
        description: "Notes for the transaction"
  TransactionsResponse:
    type: "object"
    properties:
      status:
        type: "integer"
        example: 200
      message:
        type: "string"
        example: "Transactions for the current month retrieved successfully"
      body:
        type: "array"
        items:
          $ref: "#/definitions/Transaction"
  TransactionDetailResponse:
    type: "object"
    properties:
      status:
        type: "integer"
        example: 200
      message:
        type: "string"
        example: "Transaction information updated successfully"
      body:
        $ref: "#/definitions/TransactionDetail"
  AccountsResponse:
    type: "object"
    properties:
      status:
        type: "integer"
      message:
        type: "string"
      body:
        type: "array"
        items:
          $ref: "#/definitions/Accounts"
